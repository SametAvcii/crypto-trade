version: "3"
services:
  crypto-trade-db:
    image: "postgres:14.6"
    container_name: crypto-trade-db
    volumes:
      - crypto-trade_data:/var/lib/postgresql/data
    networks:
      - crypto-trade
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  crypto-trade:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: crypto-trade
    container_name: crypto-trade
    working_dir: /app/cmd/app
    restart: always
    networks:
      - crypto-trade
    volumes:
      - ./:/app
      - ./config-hot.yaml:/app/cmd/app/config.yaml
      - ./cmd/app/.air.toml:/app/cmd/app/.air.toml
    ports:
      - "8001:8001"
    command: ["air"]
    depends_on:
      - crypto-trade-db
      - crypto-trade-redis
      - crypto-trade-kafka

  crypto-trade-consumer:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: crypto-trade-consumer
    container_name: crypto-trade-consumer
    working_dir: /app/cmd/consumer
    restart: always
    networks:
      - crypto-trade
    volumes:
      - ./:/app
      - ./config-hot.yaml:/app/cmd/consumer/config.yaml
      - ./cmd/consumer/.air.toml:/app/cmd/consumer/.air.toml
    ports:
      - "8002:8002"
    command: ["air"]
    depends_on:
      - crypto-trade-db
      - crypto-trade-redis
      - crypto-trade-kafka

  crypto-trade-zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: crypto-trade-zookeeper
    networks:
      - crypto-trade
    ports:
      - "2181:2181"

  crypto-trade-kafka:
    image: wurstmeister/kafka:latest
    container_name: crypto-trade-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://crypto-trade-kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=crypto-trade-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LOG_RETENTION_BYTES=104857600  # 100 MB
      - KAFKA_LOG_RETENTION_HOURS=168 # 7 days
      - KAFKA_REQUEST_TIMEOUT_MS=30000
    networks:
      - crypto-trade
    depends_on:
      - crypto-trade-zookeeper  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 10  

  crypto-trade-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: crypto-trade-kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "crypto-trade-kafka:9092"
    networks:
      - crypto-trade
    depends_on:
      - crypto-trade-kafka


  crypto-trade-redis:
    image: "redis:latest"
    container_name: crypto-trade-redis
    networks:
      - crypto-trade

  crypto-trade-mongo:
    image: "mongo:latest"
    container_name: crypto-trade-mongo
    networks:
      - crypto-trade
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - crypto-trade-mongo-data:/data/db
    restart: always  

  mongo-express:
    image: mongo-express
    container_name: crypto-trade-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      # Tam bağlantı URI'si veriyoruz, böylece hostname doğru olarak çözülüyor.
      ME_CONFIG_MONGODB_URL: "mongodb://crypto-trade-user:crypto-trade-pass@crypto-trade-mongo:27017/crypto-trade?authSource=admin"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - crypto-trade-mongo
    networks:
      - crypto-trade
 
  crypto-trade-prometheus:
    image: prom/prometheus:latest
    container_name: crypto-trade-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml 
    ports:
      - "9090:9090" 
    networks:
      - crypto-trade
    restart: always

  crypto-trade-grafana:
    image: grafana/grafana:latest
    container_name: crypto-trade-grafana
    ports:
      - "3000:3000"  # Grafana UI portu
    networks:
      - crypto-trade
    restart: always
    depends_on:
      - crypto-trade-prometheus

   
  crypto-trade-postgres-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: crypto-trade-postgres-exporter
    environment:
     - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@crypto-trade-db:5432/${POSTGRES_DB}?sslmode=disable

    ports:
      - "9187:9187"
    networks:
      - crypto-trade
    depends_on:
      - crypto-trade-db

  #cadvisor:
  #  image: gcr.io/cadvisor/cadvisor
  #  ports:
  #    - "8089:8080"
  #  volumes:
  #    - /:/rootfs:ro
  #    - /var/run:/var/run:ro
  #    - /sys:/sys:ro
  #    - /var/lib/docker/:/var/lib/docker:ro
  #  networks:
  #    - crypto-trade
  #  command:
  #    - "--disable_metrics=disk"
  #    - "--disable_metrics=memory"
  #  logging:
  #    driver: "none" 
  #  privileged: true  



volumes:
  crypto-trade_data:
  crypto-trade-mongo-data:

networks:
  crypto-trade:
    name: crypto-trade
    driver: bridge